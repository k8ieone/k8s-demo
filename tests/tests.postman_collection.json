{
	"info": {
		"_postman_id": "823768bb-3a38-4bda-a5eb-83b344a59c42",
		"name": "TODOs API test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create new TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Has Content-Type\", function() {",
							"    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"    pm.expect(contentTypeHeaderExists).to.eq(true);",
							"    if (contentTypeHeaderExists) {",
							"        pm.test(\"Content-Type is application/json\", function () {",
							"            pm.expect(pm.response.headers.get(\"Content-Type\")).to.eq(\"application/json\");",
							"        })",
							"    }",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.ok;",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"The TODO has the correct title\", function () {",
							"    pm.expect(pm.response.json().title).to.eq(\"test\");",
							"});",
							"",
							"pm.collectionVariables.set(\"todo_id\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"test\",\n  \"description\": \"Test TODO\",\n  \"completed\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/v1/todos",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "List TODOs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Has Content-Type\", function() {",
							"    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"    pm.expect(contentTypeHeaderExists).to.eq(true);",
							"    if (contentTypeHeaderExists) {",
							"        pm.test(\"Content-Type is application/json\", function () {",
							"            pm.response.headers.has(\"application/json\");",
							"        })",
							"    }",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.ok;",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v1/todos",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Has Content-Type\", function() {",
							"    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"    pm.expect(contentTypeHeaderExists).to.eq(true);",
							"    if (contentTypeHeaderExists) {",
							"        pm.test(\"Content-Type is application/json\", function () {",
							"            pm.expect(pm.response.headers.get(\"Content-Type\")).to.eq(\"application/json\");",
							"        })",
							"    }",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.ok;",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"The TODO has the correct title\", function () {",
							"    pm.expect(pm.response.json().title).to.eq(\"test\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v1/todos/{{todo_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"todos",
						"{{todo_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update TODO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Has Content-Type\", function() {",
							"    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"    pm.expect(contentTypeHeaderExists).to.eq(true);",
							"    if (contentTypeHeaderExists) {",
							"        pm.test(\"Content-Type is application/json\", function () {",
							"            pm.expect(pm.response.headers.get(\"Content-Type\")).to.eq(\"application/json\");",
							"        })",
							"    }",
							"});",
							"",
							"pm.test(\"Response must be valid and have a body\", function () {",
							"     pm.response.to.be.ok;",
							"     pm.response.to.be.withBody;",
							"     pm.response.to.be.json;",
							"});",
							"",
							"pm.test(\"The TODO has the correct title\", function () {",
							"    pm.expect(pm.response.json().title).to.eq(\"test updated\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"test updated\",\n  \"description\": \"Updated test TODO\",\n  \"completed\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/v1/todos/{{todo_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"todos",
						"{{todo_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete TODO",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check that the TODO is deleted\", function () {",
							"    pm.sendRequest(pm.collectionVariables.get(\"host\") + \"/api/v1/todos/1\", function (err, response) {",
							"        pm.expect(response.status).to.eq('Not Found');",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/v1/todos/{{todo_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"v1",
						"todos",
						"{{todo_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "todo_id",
			"value": ""
		},
		{
			"key": "host",
			"value": "http://192.168.49.2:32502"
		}
	]
}